generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}


model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  accessToken  String   @unique
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  password      String?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Order         Order[]

}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Product {
  id          String @id @default(cuid())
  name        String
  description String @db.Text
  price       Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  images        ProductImages[]
  order_product OrderProduct[]
}

model ProductImages {
  id String @id @default(cuid())

  image_url String

  product_id String
  product    Product @relation(references: [id], fields: [product_id], onDelete: Cascade)

  @@index([product_id])
}

model OrderProduct {
  id String @id @default(cuid())

  product_id String
  product    Product @relation(fields: [product_id], references: [id])
  order_id String
  order    Order  @relation(fields: [order_id], references: [id])

  quantity Int

  @@index([order_id])
  @@index([product_id])
}

model Order {
  id String @id @default(cuid())

  user         User           @relation(fields: [user_id], references: [id])
  user_id      String

  total Int
  payment_intent_id String
  card_brand String
  card_last4 String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  order_products OrderProduct[]

  @@index([user_id])
}
